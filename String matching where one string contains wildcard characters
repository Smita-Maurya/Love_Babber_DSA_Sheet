class Solution{
    public:
    vector<vector<int>>dp;
    bool check(string &w , string &p , int n , int m){
        if(n<0 && m<0){
            return 1;
        }
        if(m<0){
            return 0;
        }
        
        if(n<0){
            while(m>=0){
                if(p[m]!='*'){
                    return 0;
                }
                m--;
            }
            return 1;
        }
        
        if(dp[n][m]==-1){
            if(p[m]=='*'){
                return dp[n][m]= check(w , p , n-1 ,m)|| check(w , p , n , m-1);
            }
            
            else{
                if(p[m]!=w[n] && p[m]!='?'){
                    return dp[n][m]=0;
                }
                else{
                    return dp[n][m]= check(w ,p , n-1 , m-1);
                }
            }
        }
        return dp[n][m];
    }
    bool match(string wild, string pattern)
    {
        int m=wild.size();
        int n=pattern.size();
        dp.clear();
        dp.resize(n+1 , vector<int>(m+1 , -1));
        return dp[n][m]=check(pattern , wild , n-1 , m-1);
         
    }
};
