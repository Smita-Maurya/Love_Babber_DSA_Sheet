class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int check(int a , int b ,vector<vector<int> >& M){
        return M[a][b];
    }
    int celebrity(vector<vector<int> >& M, int n) 
    {
         class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int check(int a , int b ,vector<vector<int> >& M){
        return M[a][b];
    }
    int celebrity(vector<vector<int> >& M, int n) 
    {
        ////USING GRAPH CONCEPT
        // int indeg[n]={0};
        // int outdeg[n]={0};
        // for(int i=0; i<n ; i++){
        //     for(int j=0; j<n ; j++){
        //         int x=check(i , j , M);
        //         outdeg[i]+=x;
        //         indeg[j]+=x;
        //     }
        // }
        // for(int i=0; i<n ; i++){
        //     if(indeg[i]==n-1 && outdeg[i]==0){
        //         return i;
        //     }
        // }
        // return -1;
        
        
        ///USING TWO POINTER
        
        int i=0;
        int j=n-1;
        while(i<j){
            if(M[j][i]==1){
                j--;
            }
            else{
                i++;
            }
        }
        int c=i;
         
        for (i = 0; i < n; i++) {
        if (i != c) {
            if (M[i][c] == 0
                || M[c][i] == 1)
                return -1;
        }
    }
        return c;
    
    }
};
        
      
