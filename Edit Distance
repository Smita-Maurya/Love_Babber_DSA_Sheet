class Solution {
  public:
  int helper(string s , string t ,  int n , int m , vector<vector<int>>&dp ){
      if(n<0){
          return m+1;
      }
      if(m<0){
          return n+1;
      }
      if(dp[n][m]!=-1){
          return dp[n][m];
      }
      if(s[n]==t[m]){
       return   dp[n][m]= helper(s , t  , n-1 , m-1 , dp);
      }
      
      return dp[n][m]=1+ min(helper(s , t  , n-1 , m,dp) ,min( helper(s , t  , n , m-1,dp) ,helper(s , t  , n-1 , m-1 , dp)) );
       
  }
    int editDistance(string s, string t) {
        // Code here
        int n=s.size();
        int m=t.size();
        if(s==t){
            return 0;
        }
        vector<vector<int>>dp(n ,vector<int>(m , -1));
        int ans= helper(s , t, n-1 , m-1 , dp);
        return ans;
        
    }
};
