string longestPalindrome(string S){
       int ans=0;
       string s=S;
       int n=S.size(),x=-2,y=-2;
       vector<vector<int>>dp(n+1,vector<int>(n+1,0));
       for(int diff=0;diff<n;diff++)
       {
           for(int i=0,j=diff+i;j<n;j++,i++)
           {
               if(diff==0)
               {
                   dp[i][j]=1;
                   if(ans<dp[i][j])
                   {
                       ans=dp[i][j];
                       x=i;y=j;
                   }
               }
               else if(diff==1)
               {
                   if(s[i]==s[j])
                   {
                       dp[i][j]=2;
                       if(ans<dp[i][j])
                   {
                       ans=dp[i][j];
                       x=i;y=j;
                   }
                   }
                   
               }
               else{
                   if(s[i]==s[j] && dp[i+1][j-1]!=0)
                   {
                       dp[i][j]=2+dp[i+1][j-1];
                    if(ans<dp[i][j])
                   {
                       ans=dp[i][j];
                       x=i;y=j;
                   }
                       
                   }
                   else{
                       dp[i][j]=0;
                       if(ans<dp[i][j])
                   {
                       ans=dp[i][j];
                       x=i;y=j;
                   }
                   }
               }
           }
       }
       string st;
       while(x<=y)
       {
           st=st+s[x];
           x++;
       }
       return st;
       
    }

